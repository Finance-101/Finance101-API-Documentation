openapi: 3.0.0
info:
  title: Finance101 Backend API
  summary: Finance101 Documentation for backend REST APIs
  version: 1.0.0
  description: Finance101 Proprietary Backend API Endpoints
  contact:
    name: Finance101
    url: https://instagram.com/finance101.business
    email: dev.finance101@gmail.com
version: 1.0.0
servers:
  - url: "http://localhost:8082/"
components:
  schemas:
    BackofficeUser:
      description: Backoffice User
      type: object
      properties:
        id:
          description: Unique user identifier
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        password:
          type: password
          format: password
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        createdAt:
          description: Timestamp the user was created
          type: string
        updatedAt:
          description: Timestamp the user was updated
          type: string
        isActive:
          description: Flag to indicate if user is active or not
          type: boolean
    PasswordlessBackofficeUser:
      description: Passwordless Backoffice User
      type: object
      properties:
        id:
          description: Unique user identifier
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        role:
          $ref: "#/components/schemas/Role"
        createdAt:
          description: Timestamp the user was created
          type: string
        updatedAt:
          description: Timestamp the user was updated
          type: string
        isActive:
          description: Flag to indicate if user is active or not
          type: boolean
    Role:
      description: Backoffice User's Role
      type: object
      properties:
        id:
          description: Unique role identifier
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        createdAt:
          description: Timestamp the role was created
          type: string
        updatedAt:
          description: Timestamp the role was updated
          type: string
    Permission:
      description: A role's permission
      type: object
      properties:
        id:
          description: Unique permission identifier
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        createdAt:
          description: Timestamp the permission was created
          type: string
        updatedAt:
          description: Timestamp the permission was updated
          type: string
    Category:
      properties:
        id:
          description: Unique category identifier
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        createdAt:
          description: Timestamp the category was created
          type: string
        updatedAt:
          description: Timestamp the category was updated
          type: string
        isPublished:
          description: Flag to indicate if category is published or not
          type: boolean
    Section:
      properties:
        id:
          description: Unique category identifier
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        createdAt:
          description: Timestamp the section was created
          type: string
        updatedAt:
          description: Timestamp the section was updated
          type: string
    Tag:
      description: Tags
      type: object
      properties:
        id:
          description: Unique tag identifier
          type: integer
          format: int64
        title:
          type: string
        createdAt:
          description: Timestamp the tag was created
          type: string
        updatedAt:
          description: Timestamp the tag was updated
          type: string
  responses:
    InvalidBooleanParamError:
      description: Error for invalid boolean parameter
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    InvalidPaginationParamsError:
      description: Error for invalid pagination parameters
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    InvalidSortingOptionsError:
      description: Error for invalid sorting options
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    MissingRequiredFieldsError:
      description: Error for missing required fields
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
        missingFields:
          type: array
          items:
            type: string
    PermissionDeniedError:
      description: Permission denied error
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    BadRequestError:
      description: Bad request error
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    NotFoundInDatabaseError:
      description: Error for not found in the database
      type: object
      properties:
        errorName:
          type: string
        error:
          type: string
    GeneralError:
      description: General Error
      type: object
      properties:
        errorName:
          description: Type of error
          type: string
        error:
          description: Error message
          type: string
paths:
  /api/v1/backoffice/user/list:
    get:
      summary: Get all backoffice users, if no isActive filter provided, default is true
      tags:
        - Backoffice Users
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1), must provide both pageNumber and pageSize.
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page, must provide both pageNumber and pageSize.
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - username
              - email
              - firstName
              - lastName
              - roleId
              - isActive
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search user by username, email, firstName, lastName and role name
          schema:
            type: string
        - name: roleId
          in: path
          required: false
          description: Filter by roleId
          schema:
            type: integer
        - name: isActive
          in: path
          required: false
          description: Filter by isActive
          schema:
            type: boolean
            enum:
              - true
              - false
      responses:
        "200":
          description: A list of backoffice users (may be empty)
          content:
            application/json:
              example:
                - id: 1
                  username: admin
                  email: admin@gmail.com
                  firstName: Admin
                  lastName: User
                  role:
                    id: 1
                    title: ADMIN
                  isActive: true
                  createdAt: 2023-11-14T17:59:44.989Z
                  updatedAt: 2023-11-14T18:00:03.469Z
                - id: 2
                  username: contentcreator
                  email: contentcreator@gmail.com
                  firstName: Content
                  lastName: Creator
                  role:
                    id: 2
                    title: CONTENT_CREATOR
                  isActive: true
                  createdAt: 2023-11-15T14:30:10.089Z
                  updatedAt: 2023-11-15T18:05:10.669Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/user/login:
    post:
      summary: Authentication endpoint for login backoffice user
      tags:
        - Backoffice Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                email: admin@gmail.com
                token: hashedToken
                role: ADMIN
                permissions:
                  - CREATE_BACKOFFICE_USER
                  - LIST_BACKOFFICE_USERS
                  - UPDATE_BACKOFFICE_USER
        default:
          description: Bad request error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/user/signup:
    post:
      summary: Add backoffice user
      tags:
        - Backoffice Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
                username:
                  required: true
                  type: string
                firstName:
                  required: true
                  type: string
                lastName:
                  required: true
                  type: string
                roleId:
                  required: true
                  type: integer
                isActive:
                  required: true
                  type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                email: admin@gmail.com
                token: hashedToken
                role: ADMIN
                permissions:
                  - CREATE_BACKOFFICE_USER
                  - LIST_BACKOFFICE_USERS
                  - UPDATE_BACKOFFICE_USER
        default:
          description: General error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/user/{id}:
    get:
      summary: Get a single backoffice user by ID
      tags:
        - Backoffice Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice user
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  username: admin
                  firstName: Admin
                  lastName: User
                  email: admin@gmail.com
                  roleId: 1
                  isActive: true
                  createdAt: 2023-11-14T17:59:44.989Z
                  updatedAt: 2023-11-14T18:00:03.469Z
                  role:
                    id: 1
                    title: ADMIN
                    description: Admin role
                    createdAt: 2023-11-15T16:25:14.285Z
                    updatedAt: 2023-11-15T16:25:14.285Z
                    permissions:
                      - createdAt: 2023-11-16T17:02:03.701Z
                        updatedAt: 2023-11-16T17:02:03.701Z
                        roleId: 1
                        permissionId: 1
                        permission:
                          id: 1
                          title: LIST_BACKOFFICE_USERS
                          description: List all users
                          createdAt: 2023-11-16T17:02:03.701Z
                          updatedAt: 2023-11-16T17:02:03.701Z
                      - createdAt: 2023-11-16T17:02:03.701Z
                        updatedAt: 2023-11-16T17:02:03.701Z
                        roleId: 1
                        permissionId: 2
                        permission:
                          id: 2
                          title: CREATE_BACKOFFICE_USERS
                          description: Create a backoffice user
                          createdAt: 2023-11-16T17:02:03.701Z
                          updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a backoffice user
      tags:
        - Backoffice Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice user
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                roleId:
                  type: integer
                isActive:
                  required: false
                  type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                username: admin
                password: hashedPassword
                firstName: Admin
                lastName: User
                email: admin@gmail.com
                roleId: 1
                createdAt: 2023-11-13T18:38:08.122Z
                updatedAt: 2023-11-14T09:41:08.014Z
                isActive: true
        "403":
          description: Permission denied if trying to update own role and is not an admin
          content:
            application/json:
              schema:
                $ref: "#/components/responses/PermissionDeniedError"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a backoffice user (can not delete own account)
      tags:
        - Backoffice Users
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice user
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                username: admin
                password: hashedPassword
                firstName: Admin
                lastName: User
                email: admin@gmail.com
                roleId: 1
                createdAt: 2023-11-13T18:38:08.122Z
                updatedAt: 2023-11-14T09:41:08.014Z
                isActive: true
        "403":
          description: Permission denied if trying to delete own account
          content:
            application/json:
              schema:
                $ref: "#/components/responses/PermissionDeniedError"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/frontpageUserManagement/list:
    get:
      summary: Get all frontpageUsers users
      tags:
        - FrontpageUser Management (For Backoffice Use)
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1), must provide both pageNumber and pageSize.
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page, must provide both pageNumber and pageSize.
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter (must also provide order parameter)
          schema:
            type: string
            enum:
              - id
              - username
              - email
              - firstName
              - lastName
              - roleId
              - isActive
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter (must also provide sortBy parameter)
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search user by username, email, firstName, lastName
          schema:
            type: string
        - name: userTypeId
          in: path
          required: false
          description: Filter by userTypeId (database default is ID 1 for Normal users and ID 2 for premium)
          schema:
            type: integer
        - name: isActive
          in: path
          required: false
          description: Filter by isActive
          schema:
            type: boolean
            enum:
              - true
              - false
      responses:
        "200":
          description: A list of frontpage users
          content:
            application/json:
              example:
                - id: 2
                  userTypeId: 1
                  username: regularUser
                  firstName: Regular
                  lastName: User
                  birthdate: 2002-01-04T00:00:00
                  isActive: true
                  email: regularUser@gmail.com
                  subscriptionExpiresAt: null
                  createdAt: 2023-11-14T17:59:44.989Z
                  updatedAt: 2023-11-14T18:00:03.469Z
                - id: 3
                  userTypeId: 1
                  username: regularUser2
                  firstName: Another
                  lastName: User
                  birthdate: 2002-01-04T00:00:00
                  isActive: false
                  email: regularUser2@gmail.com
                  subscriptionExpiresAt: 2024-12-31T23:59:59Z
                  createdAt: 2023-11-14T17:59:44.989Z
                  updatedAt: 2023-11-14T18:00:03.469Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/frontpageUserManagement/create:
    post:
      summary: Create a frontpage user
      tags:
        - FrontpageUser Management (For Backoffice Use)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userTypeId:
                  required: true
                  type: integer
                username:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
                firstName:
                  required: true
                  type: string
                lastName:
                  required: true
                  type: string
                birthdate:
                  required: true
                  type: date
                isActive:
                  required: true
                  type: boolean
                email:
                  required: true
                  type: string
                subscriptionExpiresAt:
                  required: true
                  type: date
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 5
                userTypeId: 1
                username: regularUser
                firstName: Regular
                lastName: User
                birthDate: 2002-01-04T00:00:00
                isActive: true
                email: regularUser@gmail.com
                subscriptionExpiresAt: null
                createdAt: 2023-11-13T18:38:08.122Z
                updatedAt: 2023-11-14T09:41:08.014Z
                userType:
                    title: Normal
                customization: "[]"
                preferences: "[]"
                achievements: "[]"
                _count:
                    CUPs: 0
                    likes: 0
                    achievements: 0
                    userQuizzes: 0
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/frontpageUserManagement/{id}:
    get:
      summary: Get a single frontpage user by ID
      tags:
        - FrontpageUser Management (For Backoffice Use)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the frontpage user
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 9
                  userTypeId: 1
                  username: regularUser
                  firstName: Regular
                  lastName: User
                  birthdate: 2002-01-04T00:00:00Z
                  isActive: true
                  email: regularUser@gmail.com
                  subscriptionExpiresAt: 2024-12-31T23:59:59Z
                  createdAt: 2023-11-14T17:59:44.989Z
                  updatedAt: 2023-11-14T18:00:03.469Z
                  userType:
                    title: Normal
                  customization: "[]"
                  preferences: "[]"
                  achievements: "[]"
                  _count:
                    CUPs: 0
                    likes: 0
                    achievements: 0
                    userQuizzes: 0
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a frontpage user (Only updates the fields that are supplied and different from undefined)
      tags:
        - FrontpageUser Management (For Backoffice Use)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the frontpage user
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userTypeId:
                  required: false
                  type: integer
                username:
                  required: false
                  type: string
                password:
                  required: false
                  type: string
                firstName:
                  required: false
                  type: string
                lastName:
                  required: false
                  type: string
                birthdate:
                  required: false
                  type: date
                isActive:
                  required: false
                  type: boolean
                email:
                  required: false
                  type: string
                subscriptionExpiresAt:
                  required: false
                  type: date
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 5
                userTypeId: 2
                username: regularUser
                firstName: Regular
                lastName: User
                birthDate: 2002-01-04T00:00:00
                isActive: true
                email: updatedEmail@gmail.com
                subscriptionExpiresAt: null
                createdAt: 2023-11-13T18:38:08.122Z
                updatedAt: 2023-11-14T09:41:08.014Z
                userType:
                    title: Premium
                customization: "[]"
                preferences: "[]"
                achievements: "[]"
                _count:
                    CUPs: 0
                    likes: 0
                    achievements: 0
                    userQuizzes: 0
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a frontpage user
      tags:
        - FrontpageUser Management (For Backoffice Use)
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the frontpage user
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 5
                userTypeId: 2
                username: regularUser
                firstName: Regular
                lastName: User
                birthDate: 2002-01-04T00:00:00
                isActive: true
                email: updatedEmail@gmail.com
                subscriptionExpiresAt: null
                createdAt: 2023-11-13T18:38:08.122Z
                updatedAt: 2023-11-14T09:41:08.014Z
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/roles/list:
    get:
      summary: Get all backoffice roles
      tags:
        - Backoffice Roles
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - createdAt
              - updatedAt
              - title
        - name: order
          in: path
          required: false
          description: Which order to sort by
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Search by role title or description
          schema:
            type: string
      responses:
        "200":
          description: A list of backoffice roles (may be empty)
          content:
            application/json:
              example:
                - id: 1
                  title: ADMIN
                  description: Administrator role
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                - id: 2
                  title: CONTENT_CREATOR
                  description: Content Creator role
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/roles/{id}:
    get:
      summary: Get a single backoffice role by ID
      tags:
        - Backoffice Roles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: ADMIN
                description: Administrator role
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                permissions:
                  - createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    roleId: 1
                    permissionId: 1
                    permission:
                      id: 1
                      title: CREATE_BACKOFFICE_USER
                      description: Create backoffice user
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
                  - createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    roleId: 1
                    permissionId: 1
                    permission:
                      id: 1
                      title: CREATE_BACKOFFICE_USER
                      description: Create backoffice user
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a backoffice role
      tags:
        - Backoffice Roles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: UPDATED_ROLE
                description: Updated role description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a backoffice role
      tags:
        - Backoffice Roles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: DELETED_ROLE
                description: Deleted role description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: General Error
          content:
            schema:
              $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/roles/:
    post:
      summary: Create a backoffice role
      tags:
        - Backoffice Roles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: true
                  type: string
                description:
                  required: true
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: NEW_ROLE
                description: New role description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/permissions/list:
    get:
      summary: Get all backoffice permissions
      tags:
        - Backoffice Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - createdAt
              - updatedAt
              - title
        - name: order
          in: path
          required: false
          description: Order to sort by
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by title or description
          schema:
            type: string
      responses:
        "200":
          description: A list of backoffice permissions (may be empty)
          content:
            application/json:
              example:
                - id: 1
                  title: READ_CONTENT
                  description: Read content permission
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                - id: 2
                  title: WRITE_CONTENT
                  description: Write content permission
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/permissions/{id}:
    get:
      summary: Get a single backoffice permission by ID
      tags:
        - Backoffice Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: READ_CONTENT
                description: Read content permission
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a backoffice permission
      tags:
        - Backoffice Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: UPDATED_PERMISSION
                description: Updated permission description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a backoffice permission
      tags:
        - Backoffice Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: DELETED_PERMISSION
                description: Deleted permission description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/permissions/:
    post:
      summary: Create a backoffice permission
      tags:
        - Backoffice Permissions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: NEW_PERMISSION
                description: New permission description
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
      default:
        description: Error message
        content:
          application/json:
            schema:
  /api/v1/backoffice/rolePermissions/list:
    get:
      summary: Get all backoffice role permissions
      tags:
        - Role Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - permissionId
              - roleId
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by permission title or description, or role title or description
          schema:
            type: string
        - name: roleId
          in: path
          required: false
          description: RoleId to filter by
          schema:
            type: string
        - name: permissionId
          in: path
          required: false
          description: permissionId to filter by
          schema:
            type: string
      responses:
        "200":
          description: A list of backoffice role permissions (may be empty)
          content:
            application/json:
              example:
                - createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  roleId: 1
                  permissionId: 1
                  role:
                    id: 1
                    title: ADMIN
                    description: Administrator role
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                  permission:
                    id: 1
                    title: READ_CONTENT
                    description: Read content permission
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                - createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  roleId: 2
                  permissionId: 2
                  role:
                    id: 2
                    title: CONTENT_CREATOR
                    description: Content Creator role
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                  permission:
                    id: 2
                    title: WRITE_CONTENT
                    description: Write content permission
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/rolePermissions/{roleId}/{permissionId}:
    get:
      summary: Get a single backoffice role permission by ID
      tags:
        - Role Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: roleId
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
        - name: permissionId
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                roleId: 1
                permissionId: 1
                role:
                  id: 1
                  title: ADMIN
                  description: Administrator role
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                permission:
                  id: 1
                  title: READ_CONTENT
                  description: Read content permission
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a backoffice role permission
      tags:
        - Role Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: roleId
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
        - name: permissionId
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newRoleId:
                  type: integer
                newPermissionId:
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                roleId: 3
                permissionId: 3
                role:
                  id: 3
                  title: UPDATED_ROLE
                  description: Updated role description
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                permission:
                  id: 3
                  title: UPDATED_PERMISSION
                  description: Updated permission description
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a backoffice role permission
      tags:
        - Role Permissions
      security:
        - BearerAuth: []
      parameters:
        - name: roleId
          in: path
          required: true
          description: The auto-generated id of the backoffice role
          schema:
            type: integer
        - name: permissionId
          in: path
          required: true
          description: The auto-generated id of the backoffice permission
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                roleId: 3
                permissionId: 3
                role:
                  id: 3
                  title: DELETED_ROLE
                  description: Deleted role description
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                permission:
                  id: 3
                  title: DELETED_PERMISSION
                  description: Deleted permission description
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/backoffice/rolePermissions/:
    post:
      summary: Create a backoffice role permission
      tags:
        - Role Permissions
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roleId:
                  type: integer
                permissionId:
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                roleId: 3
                permissionId: 3
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/user/signup:
    post:
      summary: Register for a regular Finance101 account.
      tags:
        - Frontpage Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                username:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
                firstName:
                  required: true
                  type: string
                lastName:
                  required: true
                  type: string
                birthdate:
                  required: true
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 4
                username: basicUser
                token: hashedToken
        default:
          description: General error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/user/login:
    post:
      summary: Log in an existing frontpage user
      tags:
        - Frontpage Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  required: true
                  type: string
                password:
                  required: true
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 4
                email: basicUser4@gmail.com
                token: hashedToken
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/user:
    get:
      summary: Get logged in user details (bearer token)
      tags:
        - Frontpage Users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 4
                username: basicUser4
                email: basicUser4@gmail.com
                firstName: Regular
                lastName: User
                birthDate: 2002-04-01T00:00:00.000Z
                createdAt: 2024-03-02T13:20:38.718Z
                updatedAt: 2024-03-02T13:20:38.718Z
                isActive: true
                userTypeId: 1
                userType: Normal
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update logged in user using bearer token (all inputs optional)
      tags:
        - Frontpage Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  required: false
                  type: string
                password:
                  required: false
                  type: string
                firstName:
                  required: false
                  type: string
                lastName:
                  required: false
                  type: string
                birthdate:
                  required: false
                  type: string
                email:
                  required: false
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                iid: 4
                username: basicUser4
                email: basicUser4@gmail.com
                firstName: Regular
                lastName: User
                birthDate: 2002-04-01T00:00:00.000Z
                createdAt: 2024-03-02T13:20:38.718Z
                updatedAt: 2024-03-02T13:20:38.718Z
                isActive: true
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/categories/list:
    get:
      summary: Get list of categories (lists all categories by default published or not published)
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - isPublished
              - title
              - parentCategoryId
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by title or description
          schema:
            type: string
        - name: isPublished
          in: path
          required: false
          description: Filter by isPublished
          schema:
            type: string
            enum:
              - true
              - false
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Investimentos
                  description: Investimentos I
                  parentCategoryId: null
                  parentCategory: null
                  isPublished: true
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                - id: 2
                  title: ETF
                  description: Investir em ETFs
                  parentCategoryId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  parentCategory:
                    id: 1
                    title: Investimentos
                    description: Investimentos I
                    parentCategoryId: null
                    isPublished: true
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/categories/{id}:
    get:
      summary: Get a single category by ID
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the category
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: ETF
                description: Investir em ETFs
                isPublished: true
                parentCategoryId: 1
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                parentCategory:
                  id: 1
                  title: Investimentos
                  description: Investimentos I
                  isPublished: true
                  parentCategoryId: null
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a category
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the category
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: false
                  type: string
                description:
                  required: false
                  type: string
                parentCategoryId:
                  required: false
                  type: integer
                isPublished:
                  required: false
                  type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Investimentos
                description: Investimentos I
                parentCategoryId: 2
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                isPublished: true
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a category
      tags:
        - Categories
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the category
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Investimentos
                description: Investimentos I
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                isPublished: true
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/categories/:
    post:
      summary: Create a new category (if isPublished is not provided, default = true)
      tags:
        - Categories
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: true
                  type: string
                description:
                  required: true
                  type: string
                parentCategoryId:
                  required: false
                  type: integer
                isPublished:
                  required: false
                  type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: ETF
                description: Investir em ETFs
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                parentCategoryId: 1
                isPublished: false
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/list:
    get:
      summary: Create a new quizz (if isActive is not provided, default = false)
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - isActive
              - title
              - sectionId
              - authorId
              - difficultyLevel
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by title or description
          schema:
            type: string
        - name: isActive
          in: path
          required: false
          description: Filter by isPublished
          schema:
            type: boolean
        - name: sectionId
          in: path
          required: false
          description: Filter by sectionId
          schema:
            type: integer
        - name: authorId
          in: path
          required: false
          description: Filter by authorId
          schema:
            type: integer
        - name: difficultyLevel
          in: path
          required: false
          description: Filter by difficultyLevel
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Quizz title
                description: Description
                createdAt: 2023-11-16T17:02:03.701Z
                isActive: false
                difficultyLevel: 1
                sectionId: 1
                authorId: 1
                updatedAt: 2023-11-16T17:02:03.701Z
                section:
                  id: 1
                  title: Seca
                  description: tsasasa
                  complexityLevel: 3
                  categoryId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                questions:
                  - id: 1
                    questionText: O que são ETFS?
                    isActive: true
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    quizOrderIndex: 1
                    quizzId: 1
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/:
    post:
      summary: Create a new quizz (if isActive is not provided, default = false)
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: true
                  type: string
                description:
                  required: true
                  type: string
                isActive:
                  required: false
                  type: boolean
                  default: false
                difficultyLevel:
                  required: false
                  type: integer
                  description: must be between 1 or 3 (including)
                  default: 1
                sectionId:
                  required: true
                  type: integer
                authorId:
                  required: true
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Quizz title
                description: Description
                createdAt: 2023-11-16T17:02:03.701Z
                isActive: false
                difficultyLevel: 1
                sectionId: 1
                authorId: 1
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/{quizzId}:
    get:
      summary: Get quizz details
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: false
          description: auto-generated id of the quizz
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Quizz title
                description: Description
                createdAt: 2023-11-16T17:02:03.701Z
                isActive: false
                difficultyLevel: 1
                sectionId: 1
                authorId: 1
                updatedAt: 2023-11-16T17:02:03.701Z
                questions:
                  - id: 1
                    questionText: O que são ETFS?
                    isActive: true
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    quizOrderIndex: 1
                    quizzId: 1
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a quizz
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: false
                  type: string
                description:
                  required: false
                  type: string
                isActive:
                  required: false
                  type: boolean
                  default: false
                difficultyLevel:
                  required: false
                  type: integer
                  description: must be between 1 or 3 (including)
                  default: 1
                sectionId:
                  required: false
                  type: integer
                authorId:
                  required: false
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Quizz title
                description: Description
                createdAt: 2023-11-16T17:02:03.701Z
                isActive: false
                difficultyLevel: 1
                sectionId: 1
                authorId: 1
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a quizz (can not delete if it has questions or options -> force delete to be implemented soon!)
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: auto-generated id of the quizz
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Quizz title
                description: Description
                createdAt: 2023-11-16T17:02:03.701Z
                isActive: false
                difficultyLevel: 1
                sectionId: 1
                authorId: 1
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/{quizzId}/new-question:
    post:
      summary: Create a new question (if isActive is not provided, default = false)
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: auto-generated id of the quizz
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionText:
                  required: true
                  type: string
                isActive:
                  required: false
                  type: boolean
                  default: false
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                questionText: O que são ETFS?
                isActive: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                quizOrderIndex: 1
                quizzId: 1
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/questions/list:
    get:
      summary: List of questions
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - isActive
              - questionText
              - quizzId
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by questionText
          schema:
            type: string
        - name: isActive
          in: path
          required: false
          description: Filter by isActive
          schema:
            type: boolean
        - name: quizzId
          in: path
          required: false
          description: Filter by quizzId
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  questionText: O que são ETFS?
                  isActive: false
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  quizOrderIndex: 1
                  quizzId: 1
                  quizz:
                    id: 1
                    title: absabsa
                    description: absabsa
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    difficultyLevel: 3
                    sectionId: 1
                    authorId: 2
                  questionOptions:
                    - id: 1
                      optionText: absabsa
                      isCorrect: true
                      questionId: 1
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/{quizzId}/{questionId}:
    get:
      summary: Question detail
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: false
          description: Unique identifier of the quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: false
          description: Unique identifier of the question
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                questionText: O que são ETFS?
                isActive: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                quizOrderIndex: 1
                quizzId: 1
                quizz:
                  id: 1
                  title: absabsa
                  description: absabsa
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  isActive: true
                  difficultyLevel: 3
                  sectionId: 1
                  authorId: 2
                questionOptions:
                  - id: 1
                    optionText: absabsa
                    isCorrect: true
                    questionId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a question
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: false
          description: Unique identifier of the quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: false
          description: Unique identifier of the question
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                questionText:
                  required: false
                  type: string
                isActive:
                  required: false
                  type: boolean
                  default: false
                quizOrderIndex:
                  required: false
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                questionText: O que são ETFS?
                isActive: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                quizOrderIndex: 1
                quizzId: 1
                quizz:
                  id: 1
                  title: absabsa
                  description: absabsa
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  isActive: true
                  difficultyLevel: 3
                  sectionId: 1
                  authorId: 2
                questionOptions:
                  - id: 1
                    optionText: absabsa
                    isCorrect: true
                    questionId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a question
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: Unique identifier of the quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: Unique identifier of the question
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                questionText: O que são ETFS?
                isActive: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                quizOrderIndex: 1
                quizzId: 1
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/{quizzId}/{questionId}/new-option:
    post:
      summary: Create a new option (if isCorrect is not provided, default = false)
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: auto-generated id of the quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: auto-generated id of the question
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                optionText:
                  required: true
                  type: string
                isCorrect:
                  required: false
                  type: boolean
                  default: false
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                optionText: asasasasa
                isCorrect: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                questionId: 1
                question:
                  id: 1
                  questionText: asasasasa
                  isActive: true
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  quizOrderIndex: 1
                  quizzId: 1
                  quizz:
                    id: 1
                    title: absabsa
                    description: absabsa
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    difficultyLevel: 3
                    sectionId: 1
                    authorId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/questions/options/list:
    get:
      summary: List of options
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - isCorrect
              - optionText
              - questionId
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by questionText
          schema:
            type: string
        - name: isCorrect
          in: path
          required: false
          description: Filter by isCorrect
          schema:
            type: boolean
        - name: quizzId
          in: path
          required: false
          description: Filter by quizzId
          schema:
            type: integer
        - name: questionId
          in: path
          required: false
          description: Filter by questionId
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  optionText: asasasasa
                  isCorrect: false
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  questionId: 1
                  question:
                    id: 1
                    questionText: asasasasa
                    isActive: true
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    quizOrderIndex: 1
                    quizzId: 1
                    quizz:
                      id: 1
                      title: absabsa
                      description: absabsa
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
                      isActive: true
                      difficultyLevel: 3
                      sectionId: 1
                      authorId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/quizzes/{quizzId}/{questionId}/{optionId}:
    get:
      summary: Option detail
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: unique id of quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: unique id of question
          schema:
            type: integer
        - name: optionId
          in: path
          required: true
          description: unique id of option
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                optionText: asasasasa
                isCorrect: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                questionId: 1
                question:
                  id: 1
                  questionText: asasasasa
                  isActive: true
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  quizOrderIndex: 1
                  quizzId: 1
                  quizz:
                    id: 1
                    title: absabsa
                    description: absabsa
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    difficultyLevel: 3
                    sectionId: 1
                    authorId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update option
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: unique id of quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: unique id of question
          schema:
            type: integer
        - name: optionId
          in: path
          required: true
          description: unique id of option
          schema:
            type: integer
      requestBody:
        - name: optionText
          in: path
          required: false
          description: option text
          schema:
            type: string
        - name: isCorrect
          in: path
          required: false
          description: if the option is the correct answer
          schema:
            type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                optionText: asasasasa
                isCorrect: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                questionId: 1
                question:
                  id: 1
                  questionText: asasasasa
                  isActive: true
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  quizOrderIndex: 1
                  quizzId: 1
                  quizz:
                    id: 1
                    title: absabsa
                    description: absabsa
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    difficultyLevel: 3
                    sectionId: 1
                    authorId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete option
      tags:
        - Quizzes
      security:
        - BearerAuth: []
      parameters:
        - name: quizzId
          in: path
          required: true
          description: unique id of quizz
          schema:
            type: integer
        - name: questionId
          in: path
          required: true
          description: unique id of question
          schema:
            type: integer
        - name: optionId
          in: path
          required: true
          description: unique id of option
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                optionText: asasasasa
                isCorrect: false
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                questionId: 1
                question:
                  id: 1
                  questionText: asasasasa
                  isActive: true
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  quizOrderIndex: 1
                  quizzId: 1
                  quizz:
                    id: 1
                    title: absabsa
                    description: absabsa
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    difficultyLevel: 3
                    sectionId: 1
                    authorId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/sections/list:
    get:
      summary: Get list of sections and its associated quizzes and articles
      tags:
        - Sections
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - title
              - categoryId
              - createdAt
              - updatedAt
              - complexityLevel
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by title or description or category title
          schema:
            type: string
        - name: categoryId
          in: path
          required: false
          description: Filter by categoryId
          schema:
            type: integer
        - name: complexityLevel
          in: path
          required: false
          description: Filter by complexityLevel
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Investimentos básicos
                  description: Aprende sobre como investir...
                  complexityLevel: 1
                  categoryId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  category:
                    id: 1
                    title: "Investimentos"
                    description: "Como investir..."
                    isPublished: true
                    parentCategory:
                      id: 1
                      title: "Pai dos investimentos"
                      description: "Categoria pai"
                      isPublished: true
                  quizzes:
                    - id: 1
                      title: Teste quizz
                      description: teste quizz
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
                      isActive: true
                      sectionId: 1
                  sectionArticles:
                    - sectionId: 1
                      articleId: 1
                      title: "Investimentos Básicos"
                      description: "Investir..."
                      createdAt: 2023-11-16T17:02:03.701Z
                      updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/sections/{id}:
    get:
      summary: Get a single section by ID
      tags:
        - Sections
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Investimentos básicos
                description: Aprende sobre como investir...
                complexityLevel: 1
                categoryId: 1
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                category:
                  id: 1
                  title: "Investimentos"
                  description: "Como investir..."
                  isPublished: true
                  parentCategory:
                    id: 1
                    title: "Pai dos investimentos"
                    description: "Categoria pai"
                    isPublished: true
                quizzes:
                  - id: 1
                    title: Teste quizz
                    description: teste quizz
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    isActive: true
                    sectionId: 1
                sectionArticles:
                  - sectionId: 1
                    articleId: 1
                    title: "Investimentos Básicos"
                    description: "Investir..."
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a section
      tags:
        - Sections
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: false
                  type: string
                description:
                  required: false
                  type: string
                categoryId:
                  required: false
                  type: integer
                  format: int64
                complexityLevel:
                  required: false
                  type: integer
                  format: int64
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Investimentos Básicos
                description: Como investir...
                complexityLevel: 1
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                categoryId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a section
      tags:
        - Sections
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Investimentos Básicos
                description: Como investir...
                complexityLevel: 1
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                categoryId: 2
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/sections/:
    post:
      summary: Create a section (if complexityLevel is not provided, default will be 1)
      tags:
        - Sections
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: true
                  type: string
                description:
                  required: true
                  type: string
                categoryId:
                  required: true
                  type: integer
                  format: int64
                complexityLevel:
                  required: false
                  type: integer
                  format: int64
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: Investimentos Básicos
                description: Como investir...
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                categoryId: 2
      default:
        description: Error message
        content:
          application/json:
            schema:
              $ref: "#/components/responses/GeneralError"
  /api/v1/sectionArticles/list:
    get:
      summary: Get all section articles
      tags:
        - SectionArticles
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - sectionId
              - articleId
              - title
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by article title or description, or section title
          schema:
            type: string
        - name: sectionId
          in: path
          required: false
          description: sectionId to filter by
          schema:
            type: string
        - name: articleId
          in: path
          required: false
          description: articleId to filter by
          schema:
            type: string
      responses:
        "200":
          description: A list of sectionArticles
          content:
            application/json:
              example:
                - sectionId: 3
                  articleId: 3
                  title: Secção sobre...
                  description: Investir em...
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  section:
                    id: 3
                    title: Invest....
                    description: Investindo em...
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    categoryId: 7
                  article:
                    id: 3
                    title: Dummy article
                    content: Dummy
                    authorId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    published: false
                    categoryId: 1
                    subcategoryId: null
                - sectionId: 3
                  articleId: 3
                  title: Secção sobre...
                  description: Investir em...
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  section:
                    id: 3
                    title: Invest....
                    description: Investindo em...
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    categoryId: 7
                  article:
                    id: 3
                    title: Dummy article
                    content: Dummy
                    authorId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    published: false
                    categoryId: 1
                    subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/sectionArticles/:
    post:
      summary: Create a sectionArticle
      tags:
        - SectionArticles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sectionId:
                  required: true
                  type: integer
                articleId:
                  required: true
                  type: integer
                title:
                  required: true
                  type: string
                description:
                  required: true
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                sectionId: 3
                articleId: 3
                title: Secção sobre...
                description: Investir em...
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                section:
                  id: 3
                  title: Invest....
                  description: Investindo em...
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  categoryId: 7
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/sectionArticles/{sectionId}/{articleId}:
    get:
      summary: Get a sectionArticle
      tags:
        - SectionArticles
      security:
        - BearerAuth: []
      parameters:
        - name: sectionId
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                sectionId: 3
                articleId: 3
                title: Secçao...
                description: lalslassas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                section:
                  id: 3
                  title: Invest....
                  description: Investindo em...
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  categoryId: 7
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a SectionArticle
      tags:
        - SectionArticles
      security:
        - BearerAuth: []
      parameters:
        - name: sectionId
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      requestBody:
        - name: newSectionId
          in: path
          required: false
          description: New sectionId to update to
          schema:
            type: integer
        - name: newArticleId
          in: path
          required: false
          description: New articleId to update to
          schema:
            type: integer
        - name: newTitle
          in: path
          required: false
          description: New title to update to
          schema:
            type: string
        - name: newDescription
          in: path
          required: false
          description: New description to update to
          schema:
            type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                sectionId: 3
                articleId: 3
                title: Secçao...
                description: lalslassas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                section:
                  id: 3
                  title: Invest....
                  description: Investindo em...
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  categoryId: 7
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a SectionArticle
      tags:
        - SectionArticles
      security:
        - BearerAuth: []
      parameters:
        - name: sectionId
          in: path
          required: true
          description: The auto-generated id of the section
          schema:
            type: integer
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                sectionId: 3
                articleId: 3
                title: Secçao...
                description: lalslassas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/tags/list:
    get:
      summary: Get list of tags
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - title
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by title
          schema:
            type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: poupancas
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                - id: 2
                  title: investimentos
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/tags/:
    post:
      summary: Create a new tag
      tags:
        - Tags
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  required: true
                  description: Backend will lowercase this parameter for consistency
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: poupancas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/tags/{id}:
    get:
      summary: Get a single tag by ID
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: poupancas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a tag
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: poupancas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a tag
      tags:
        - Tags
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: poupancas
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articleTags/list:
    get:
      summary: Get all articleTags
      tags:
        - ArticleTags
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: path
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
        - name: pageSize
          in: path
          required: false
          description: Number of items per page
          schema:
            type: integer
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - articleId
              - tagId
              - createdAt
              - updatedAt
        - name: order
          in: path
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query to search by article title, or tag title
          schema:
            type: string
        - name: articleId
          in: path
          required: false
          description: articleId to filter by
          schema:
            type: integer
        - name: tagId
          in: path
          required: false
          description: tagId to filter by
          schema:
            type: integer
      responses:
        "200":
          description: A list of articleTags
          content:
            application/json:
              example:
                - articleId: 4
                  tagId: 3
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  article:
                    id: 3
                    title: Dummy article
                    content: Dummy
                    authorId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    published: false
                    categoryId: 1
                    subcategoryId: null
                  tag:
                    id: 4
                    title: jovens
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                - articleId: 4
                  tagId: 3
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  article:
                    id: 3
                    title: Dummy article
                    content: Dummy
                    authorId: 1
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
                    published: false
                    categoryId: 1
                    subcategoryId: null
                  tag:
                    id: 4
                    title: jovens
                    createdAt: 2023-11-16T17:02:03.701Z
                    updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articleTags/:
    post:
      summary: Create a articleTag
      tags:
        - ArticleTags
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                articleId:
                  required: true
                  type: integer
                tagId:
                  required: true
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                articleId: 4
                tagId: 3
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
                tag:
                  id: 4
                  title: jovens
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articleTags/{articleId}/{tagId}:
    get:
      summary: Get a articleTag
      tags:
        - ArticleTags
      security:
        - BearerAuth: []
      parameters:
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
        - name: tagId
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                articleId: 4
                tagId: 3
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
                tag:
                  id: 4
                  title: jovens
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update a articleTag
      tags:
        - ArticleTags
      security:
        - BearerAuth: []
      parameters:
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
        - name: tagId
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      requestBody:
        - name: newArticleId
          in: path
          required: false
          description: New articleId to update to
          schema:
            type: integer
        - name: newTagId
          in: path
          required: false
          description: New tagId to update to
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                articleId: 4
                tagId: 3
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
                tag:
                  id: 4
                  title: jovens
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete a articleTag
      tags:
        - ArticleTags
      security:
        - BearerAuth: []
      parameters:
        - name: articleId
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
        - name: tagId
          in: path
          required: true
          description: The auto-generated id of the tag
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                articleId: 4
                tagId: 3
                createdAt: 2023-11-16T17:02:03.701Z
                updatedAt: 2023-11-16T17:02:03.701Z
                article:
                  id: 3
                  title: Dummy article
                  content: Dummy
                  authorId: 1
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
                  published: false
                  categoryId: 1
                  subcategoryId: null
                tag:
                  id: 4
                  title: jovens
                  createdAt: 2023-11-16T17:02:03.701Z
                  updatedAt: 2023-11-16T17:02:03.701Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articles/list:
    get:
      summary: Get list of all articles for frontpage users (only approved articles) - Send frontpage bearer token
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - title
              - authorId
              - createdAt
              - updatedAt
              - published
              - premium
              - categoryId
        - name: order
          in: path
          required: false
          description: Order (ascending or descending)
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query for title or content search
          schema:
            type: string
        - name: pageNumber
          in: path
          required: false
          description: Page number of results, requires pageSize to be defined too
          schema:
            type: int
        - name: pageSize
          in: path
          required: false
          description: Number of results per page. Requires pageNumber to be defined too.
          schema:
            type: int
        - name: categoryId (list, pass it like this categoryId=1,2,3 or categoryId=1 -> separated by commas)
          in: path
          required: false
          description: List of categoriesID filter by
          schema:
            type: array
        - name: isPremium
          in: path
          required: false
          description: filter by premium articles
          schema:
            type: boolean
        - name: tagId (list, pass it like this tagId=1,2,3 or tagId=1 -> separated by commas)
          in: path
          required: false
          description: List of tagId filter by
          schema:
            type: array
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Básicos do investimento
                  content: Conteúdo sobre investimento
                  coverImageURL: https://www.google.com/
                  headerImageURL: https://www.google.com/
                  videoURL: https://www.google.com/
                  authorId: 1
                  createdAt: 2023-11-23T16:51:55.028Z
                  updatedAt: 2023-11-23T18:40:42.499Z
                  published: true
                  premium: false
                  categoryId: 1
                  subcategoryId: null
                  tags:
                    - tag:
                        id: 4
                        title: investimentos
                    - tag:
                        id: 6
                        title: jovens
                  category:
                    id: 1
                    title: Investimentos
                    description: Como investir...
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  subcategory:
                    id: 2
                    title: Subcategoria
                    description: Como subcategorizar
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  _count:
                    likes: 20
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articles/list/backoffice:
    get:
      summary: Get list of all articles for backoffice users, according to user role (Admin gets ALL articles, CC gets own articles) - Send backoffice user token
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: sortBy
          in: path
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - title
              - authorId
              - createdAt
              - updatedAt
              - published
              - premium
              - categoryId
        - name: order
          in: path
          required: false
          description: Order (ascending or descending)
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: path
          required: false
          description: Query for title or content search
          schema:
            type: string
        - name: pageNumber
          in: path
          required: false
          description: Page number of results, requires pageSize to be defined too
          schema:
            type: int
        - name: pageSize
          in: path
          required: false
          description: Number of results per page. Requires pageNumber to be defined too.
          schema:
            type: int
        - name: categoryId (list, pass it like this categoryId=1,2,3 or categoryId=1 -> separated by commas)
          in: path
          required: false
          description: List of categoriesID filter by
          schema:
            type: array
        - name: isPremium
          in: path
          required: false
          description: filter by premium articles
          schema:
            type: boolean
        - name: tagId (list, pass it like this tagId=1,2,3 or tagId=1 -> separated by commas)
          in: path
          required: false
          description: List of tagId filter by
          schema:
            type: array
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Básicos do investimento
                  content: Conteúdo sobre investimento
                  coverImageURL: https://www.google.com/
                  headerImageURL: https://www.google.com/
                  videoURL: https://www.google.com/
                  authorId: 1
                  createdAt: 2023-11-23T16:51:55.028Z
                  updatedAt: 2023-11-23T18:40:42.499Z
                  published: true
                  premium: false
                  categoryId: 1
                  subcategoryId: null
                  tags:
                    - tag:
                        id: 4
                        title: investimentos
                    - tag:
                        id: 6
                        title: jovens
                  category:
                    id: 1
                    title: Investimentos
                    description: Como investir...
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  subcategory:
                    id: 2
                    title: Subcategoria
                    description: Como subcategorizar
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  _count:
                    likes: 20
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/articles:
    post:
      summary: Add a new article
      tags:
        - Articles
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                categoryId:
                  type: int
                subcategoryId:
                  required: false
                  type: int
                coverImageURL:
                  required: false
                  type: string
                headerImageURL:
                  required: false
                  type: string
                videoURL:
                  required: false
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 4
                title: Title Dummy
                content: Content Dummy
                coverImageURL: https://www.google.com/
                headerImageURL: https://www.google.com/
                videoURL: https://www.google.com/
                authorId: 2
                createdAt: 2023-11-27T18:03:36.638Z
                updatedAt: 2023-11-27T18:03:36.638Z
                published: false
                premium: false
                categoryId: 1
                subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/articles/{id}:
    get:
      summary: Get a single article by ID for frontpage users (Only approved articles) - Send frontpage user bearer token
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Admin Title
                  content: Admin article content
                  coverImageURL: https://www.google.com/
                  headerImageURL: null
                  videoURL: null
                  authorId: 1
                  createdAt: 2023-11-23T16:51:55.028Z
                  updatedAt: 2023-11-23T18:40:42.499Z
                  published: true
                  premium: false
                  categoryId: 1
                  subcategoryId: null
                  tags:
                    - tag:
                        id: 4
                        title: investimentos
                    - tag:
                        id: 6
                        title: jovens
                  category:
                    id: 1
                    title: Investimentos
                    description: Como investir...
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  subcategory:
                    id: 2
                    title: Subcategoria
                    description: Como subcategorizar
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  _count:
                    likes: 20
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update an article (if published submit an editSubmission, otherwise edit directly)
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                coverImageURL:
                  required: false
                  type: string
                headerImageURL:
                  required: false
                  type: string
                videoURL:
                  required: false
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 1
                title: Testing title updates
                content: Content Dummy Update
                authorId: 1
                published: false
                premium: false
                createdAt: 2023-11-23T19:59:14.552Z
                updatedAt: 2023-11-27T18:12:31.326Z
                categoryId: 1
                subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    delete:
      summary: Delete an article
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 2
                title: Admin title
                content: Admin content
                authorId: 2
                createdAt: 2023-11-23T16:51:55.028Z
                updatedAt: 2023-11-23T16:51:55.028Z
                published: false
                premium: false
                categoryId: 1
                subcategoryId: null
        "403":
          description: You do not have permission to update this article
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
        "404":
          description: No such post found
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
        default:
          description: General Error
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/articles/{id}/backoffice:
    get:
      summary: Get a single article by ID for backoffice users - Send backoffice user bearer token
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                - id: 1
                  title: Admin Title
                  content: Admin article content
                  coverImageURL: https://www.google.com/
                  headerImageURL: https://www.google.com/
                  videoURL: https://www.google.com/
                  authorId: 1
                  createdAt: 2023-11-23T16:51:55.028Z
                  updatedAt: 2023-11-23T18:40:42.499Z
                  published: true
                  premium: false
                  categoryId: 1
                  subcategoryId: null
                  tags:
                    - tag:
                        id: 4
                        title: investimentos
                    - tag:
                        id: 6
                        title: jovens
                  category:
                    id: 1
                    title: Investimentos
                    description: Como investir...
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  subcategory:
                    id: 2
                    title: Subcategoria
                    description: Como subcategorizar
                    isPublished: true
                    parentCategoryId: null
                    createdAt: 2024-02-16T22:29:34.499Z
                    updatedAt: 2024-02-16T22:29:34.499Z
                  _count:
                    likes: 20
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/articles/{id}/approve:
    patch:
      summary: Approve an article/editSubmission (requires admin)
      tags:
        - Articles
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The auto-generated id of the article
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                id: 3
                title: Testing title updates cc
                content: Content Dummy Updates
                coverImageURL: https://www.google.com/
                headerImageURL: https://www.google.com/
                videoURL: https://www.google.com/
                authorId: 3
                createdAt: 2023-11-23T18:10:58.433Z
                updatedAt: 2023-11-27T18:19:32.326Z
                published: true
                premium: false
                categoryId: 1
                subcategoryId: null
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/cup/create-cup:
    post:
      summary: Generates a custom user path. You can force generate if user already has one via the flag forceGen
      tags:
        - Custom User Path
      security:
        - BearerAuth: []
      parameters:
        - name: forceGen
          in: path
          required: false
          description: Flag to generate new CUP if user already has one.
          schema:
            type: boolean
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  items:
                    type: object
                    properties:
                      questionId:
                        type: integer
                      weight:
                        type: number
                      complexityLevel:
                        type: integer
                userId:
                  type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              example:
                cup:
                  id: 1
                  userId: 1
                  title: CUP nível médio
                  avgDifficulty: 2.7
                  createdAt: 2024-03-17T11:43:57.069Z
                  updatedAt: 2024-03-17T11:43:57.069Z
                cupSteps:
                  - id: 1
                    cupId: 1
                    sectionId: 1
                    index: 1
                    completed: false
                    createdAt: 2024-03-17T11:43:57.069Z
                    updatedAt: 2024-03-17T11:43:57.069Z
                  - id: 2
                    cupId: 1
                    sectionId: 2
                    index: 2
                    completed: false
                    createdAt: 2024-03-17T11:43:57.069Z
                    updatedAt: 2024-03-17T11:43:57.069Z
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/cup/list:
    get:
      summary: List of custom user paths
      tags:
        - Custom User Path
      security:
        - BearerAuth: []
      parameters:
        - name: pageNumber
          in: query
          required: false
          description: Page number (must be above or equal to 1)
          schema:
            type: integer
            minimum: 1
        - name: pageSize
          in: query
          required: false
          description: Number of items per page
          schema:
            type: integer
            minimum: 1
        - name: sortBy
          in: query
          required: false
          description: Sort by parameter
          schema:
            type: string
            enum:
              - id
              - title
              - avgDifficulty
              - createdAt
              - updatedAt
        - name: order
          in: query
          required: false
          description: Order parameter
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: query
          in: query
          required: false
          description: Query to search by cup title
          schema:
            type: string
        - name: cupId
          in: query
          required: false
          description: Filter by cupId
          schema:
            type: integer
        - name: userId
          in: query
          required: false
          description: Filter by userId
          schema:
            type: integer
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: The ID of the custom user path.
                    userId:
                      type: integer
                      description: The ID of the user associated with the custom user path.
                    title:
                      type: string
                      description: The title of the custom user path.
                    avgDifficulty:
                      type: number
                      description: The average difficulty level of the custom user path.
                    createdAt:
                      type: string
                      format: date-time
                      description: The date and time when the custom user path was created.
                    updatedAt:
                      type: string
                      format: date-time
                      description: The date and time when the custom user path was last updated.
                    steps:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                            description: The ID of the cup step.
                          cupId:
                            type: integer
                            description: The ID of the custom user path associated with the cup step.
                          sectionId:
                            type: integer
                            description: The ID of the section associated with the cup step.
                          index:
                            type: integer
                            description: The index of the cup step.
                          completed:
                            type: boolean
                            description: Indicates whether the cup step is completed or not.
                          createdAt:
                            type: string
                            format: date-time
                            description: The date and time when the cup step was created.
                          updatedAt:
                            type: string
                            format: date-time
                            description: The date and time when the cup step was last updated.
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/cup/{cupId}:
    get:
      summary: Get detail of custom user path (if you don't provide the cupId, and the user token is a frontpage user, it will fetch that user's cup)
      tags:
        - Custom User Path
      security:
        - BearerAuth: []
      parameters:
        - name: cupId
          in: path
          required: false
          description: ID of the CUP
          schema:
            type: integer
            minimum: 1
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the custom user path.
                  userId:
                    type: integer
                    description: The ID of the user associated with the custom user path.
                  title:
                    type: string
                    description: The title of the custom user path.
                  avgDifficulty:
                    type: number
                    description: The average difficulty level of the custom user path.
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the custom user path was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: The date and time when the custom user path was last updated.
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the cup step.
                        cupId:
                          type: integer
                          description: The ID of the custom user path associated with the cup step.
                        sectionId:
                          type: integer
                          description: The ID of the section associated with the cup step.
                        index:
                          type: integer
                          description: The index of the cup step.
                        completed:
                          type: boolean
                          description: Indicates whether the cup step is completed or not.
                        createdAt:
                          type: string
                          format: date-time
                          description: The date and time when the cup step was created.
                        updatedAt:
                          type: string
                          format: date-time
                          description: The date and time when the cup step was last updated.
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
    patch:
      summary: Update custom user path (if you don't provide the cupId, and the user token is a frontpage user, it will update that user's cup)
      tags:
        - Custom User Path
      security:
        - BearerAuth: []
      parameters:
        - name: cupId
          in: path
          required: false
          description: ID of the CUP
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the custom user path.
                  userId:
                    type: integer
                    description: The ID of the user associated with the custom user path.
                  title:
                    type: string
                    description: The title of the custom user path.
                  avgDifficulty:
                    type: number
                    description: The average difficulty level of the custom user path.
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the custom user path was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: The date and time when the custom user path was last updated.
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The ID of the cup step.
                        cupId:
                          type: integer
                          description: The ID of the custom user path associated with the cup step.
                        sectionId:
                          type: integer
                          description: The ID of the section associated with the cup step.
                        index:
                          type: integer
                          description: The index of the cup step.
                        completed:
                          type: boolean
                          description: Indicates whether the cup step is completed or not.
                        createdAt:
                          type: string
                          format: date-time
                          description: The date and time when the cup step was created.
                        updatedAt:
                          type: string
                          format: date-time
                          description: The date and time when the cup step was last updated.
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"
  /api/v1/cup/updateSteps/{stepId}:
    patch:
      summary: Update custom user path steps (user token must be from a frontpage user, it will update that user's cup) NOT IMPLEMENTED FOR BACKOFFICE!
      tags:
        - Custom User Path
      security:
        - BearerAuth: []
      parameters:
        - name: stepId
          in: path
          required: true
          description: ID of the step
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                index:
                  type: integer
                completed:
                  type: boolean
      responses:
        "200":
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The ID of the cup step.
                  cupId:
                    type: integer
                    description: The ID of the custom user path associated with the cup step.
                  sectionId:
                    type: integer
                    description: The ID of the section associated with the cup step.
                  index:
                    type: integer
                    description: The index of the cup step.
                  completed:
                    type: boolean
                    description: Indicates whether the cup step is completed or not.
                  createdAt:
                    type: string
                    format: date-time
                    description: The date and time when the cup step was created.
                  updatedAt:
                    type: string
                    format: date-time
                    description: The date and time when the cup step was last updated.
                  section:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the section.
                      title:
                        type: string
                        description: The title of the section.
                      description:
                        type: string
                        description: The description of the section.
                      complexityLevel:
                        type: integer
                        description: The complexity level of the section.
                      categoryId:
                        type: integer
                        description: The ID of the category associated with the section.
                      createdAt:
                        type: string
                        format: date-time
                        description: The date and time when the section was created.
                      updatedAt:
                        type: string
                        format: date-time
                        description: The date and time when the section was last updated.
        default:
          description: Error message
          content:
            application/json:
              schema:
                $ref: "#/components/responses/GeneralError"